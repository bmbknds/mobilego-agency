{"version":3,"sources":["webpack:///src/app/shared/components/pagination/pagination.component.ts","webpack:///src/app/shared/components/pagination/pagination.component.html","webpack:///src/app/shared/components/pagination/pagination.module.ts","webpack:///src/app/shop/dashboard/dashboard.component.ts","webpack:///src/app/shop/dashboard/dashboard.component.html","webpack:///src/app/shop/order/order-confirm/order-confirm.component.ts","webpack:///src/app/shop/order/order-confirm/order-confirm.component.html","webpack:///src/app/shop/order/order.component.ts","webpack:///src/app/shop/order/order.component.html","webpack:///src/app/shop/shop-routing.module.ts","webpack:///src/app/shop/shop.module.ts","webpack:///src/app/shop/trading-topup/trading-topup-confirm/trading-topup-confirm.component.ts","webpack:///src/app/shop/trading-topup/trading-topup-confirm/trading-topup-confirm.component.html","webpack:///src/app/shop/trading-topup/trading-topup.component.ts","webpack:///src/app/shop/trading-topup/trading-topup.component.html"],"names":["PaginationComponent","pagerService","allItems","changePage","pager","pagedItems","setPage","page","length","totalPages","page_size","customPageSize","config_manage","JSON","parse","localStorage","getItem","data","find","o","param","value","getPager","slice","startIndex","endIndex","emit","selector","templateUrl","styleUrls","PaginationModule","declarations","imports","exports","providers","bootstrap","DashboardComponent","newestTrading","cdRef","OrderConfirmComponent","callBack","formatAmount","dataTable","confirmPassword","isSuccess","cmd","OrderComponent","amounts","vendors","nearestOrders","selectedVendor","currentOrder","total","discountTotal","errorMessage","isConfirm","item","$event","event","routes","path","children","component","title","urls","url","loadChildren","then","m","RechargeModule","ShopRoutingModule","forChild","ShopModule","TradingTopupConfirmComponent","TradingTopupComponent","nearestTrading","currentTopup"],"mappings":"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","file":"shop-shop-module-es5.js","sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges\n} from \"@angular/core\";\nimport { PagerService } from \"./pagination.service\";\n@Component({\n  selector: \"app-pagination\",\n  templateUrl: \"./pagination.component.html\",\n  styleUrls: [\"./pagination.component.scss\"]\n})\nexport class PaginationComponent implements OnChanges {\n  constructor(private pagerService: PagerService) {}\n\n  // array of all items to be paged\n  @Input() allItems = [];\n  @Output() changePage = new EventEmitter<any>();\n  @Input() customPageSize: any;\n  // pager object\n  pager: any = {};\n\n  // paged items\n  pagedItems = [];\n\n  ngOnChanges() {\n    this.setPage(1);\n  }\n\n  setPage(page: number) {\n    if (this.allItems.length > 0) {\n      if (page < 1 || page > this.pager.totalPages) {\n        return;\n      }\n      let page_size = 10;\n      if (this.customPageSize) {\n        page_size = this.customPageSize;\n      } else {\n        const config_manage =\n          JSON.parse(localStorage.getItem(\"config_manage\")) || [];\n        const data = config_manage.find(o => o.param === \"PAGE_SIZE\");\n        page_size = data ? +data.value : 10;\n        page_size = page_size <= 0 ? 10 : page_size;\n      }\n      // get pager object from service\n      this.pager = this.pagerService.getPager(\n        this.allItems.length,\n        page,\n        page_size\n      );\n\n      // get current page of items\n      this.pagedItems = this.allItems.slice(\n        this.pager.startIndex,\n        this.pager.endIndex + 1\n      );\n      this.changePage.emit(this.pagedItems);\n      return;\n    }\n    this.changePage.emit([]);\n  }\n}\n","<div class=\"text-right\">\n  <ul *ngIf=\"pager.pages && pager.pages.length\" class=\"pagination\">\n    <li [ngClass]=\"{disabled:pager.currentPage === 1}\">\n      <a (click)=\"setPage(1)\"><i class=\"fas fa-angle-double-left\"></i></a>\n    </li>\n    <li [ngClass]=\"{disabled:pager.currentPage === 1}\">\n      <a (click)=\"setPage(pager.currentPage - 1)\"><i class=\"fas fa-angle-left\"></i></a>\n    </li>\n    <li *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage === page}\">\n      <a (click)=\"setPage(page)\">{{page}}</a>\n    </li>\n    <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\n      <a (click)=\"setPage(pager.currentPage + 1)\"><i class=\"fas fa-angle-right\"></i></a>\n    </li>\n    <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\">\n      <a (click)=\"setPage(pager.totalPages)\"><i class=\"fas fa-angle-double-right\"></i></a>\n    </li>\n  </ul>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n    declarations: [\n        PaginationComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [PaginationComponent],\n    providers: [],\n    bootstrap: []\n})\nexport class PaginationModule { }\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.scss\"],\n})\nexport class DashboardComponent implements OnInit {\n  newestTrading = [];\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div>\n  <p>Xin chào, ABCD</p>\n  <div class=\"row\">\n    <div class=\"col-12 col-md-8\">\n      <div class=\"card text-center\">\n        <div class=\"card-header bg-white text-left\">\n          DỊCH VỤ TIỆN ÍCH\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-md-12 col-lg-10 col-xl-8\">\n              <div class=\"row\">\n                <div class=\"col-4 col-md-2\">\n                  <div class=\"custom-btn border text-info\">\n                    <i class=\"mdi mdi-signal-3g\"></i>\n                  </div>\n                  <p class=\"my-3\">Mua thẻ data</p>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                  <div class=\"custom-btn border text-info\">\n                    <i class=\"mdi mdi-credit-card-plus\"></i>\n                  </div>\n                  <p class=\"my-3\">Mua mã thẻ</p>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                  <div class=\"custom-btn border text-info\">\n                    <i class=\"mdi mdi-cellphone\"></i>\n                  </div>\n                  <p class=\"my-3\">Nạp tiền điện thoại</p>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                  <div class=\"custom-btn border text-info\">\n                    <i class=\"mdi mdi-gamepad-variant\"></i>\n                  </div>\n                  <p class=\"my-3\">Thẻ game</p>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                  <div class=\"custom-btn border text-info\">\n                    <i class=\"mdi mdi-power-plug\"></i>\n                  </div>\n                  <p class=\"my-3\">Điện</p>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                  <div class=\"custom-btn border text-info\">\n                    <i class=\"mdi mdi-water\"></i>\n                  </div>\n                  <p class=\"my-3\">Nước</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 col-md-4\">\n      <div class=\"card text-center\">\n        <div class=\"card-header bg-white text-left\">\n          GIAO DỊCH GẦN ĐÂY\n          <span class=\"float-right pointer text-info\">CHI TIẾT</span>\n        </div>\n        <div class=\"card-body\">\n          <p *ngIf=\"newestTrading.length === 0\">Không có giao dịch nào</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n} from \"@angular/core\";\nimport { formatAmount } from \"../../../shared/constants/constant\";\n\n@Component({\n  selector: \"app-order-confirm\",\n  templateUrl: \"./order-confirm.component.html\",\n  styleUrls: [\"./order-confirm.component.scss\"],\n})\nexport class OrderConfirmComponent implements OnInit {\n  @Input() currentOrder: any;\n  @Output() callBack = new EventEmitter<any>();\n  formatAmount = formatAmount;\n\n  data = [1];\n  dataTable = [1];\n\n  confirmPassword = \"\";\n  isSuccess = true;\n  constructor(public cdRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {}\n\n  onReset() {}\n\n  onConfirm() {\n    this.isSuccess = true;\n  }\n\n  onGoBack() {\n    this.callBack.emit({\n      cmd: \"go-back\",\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12 col-lg-7\">\n    <div class=\"card\">\n      <div class=\"card-body align-middle\" *ngIf=\"!isSuccess\">\n        <h6>Thanh toán</h6>\n        <img\n          class=\"my-3\"\n          width=\"auto\"\n          height=\"64px\"\n          [src]=\"\n            currentOrder.vendorLogo\n              ? 'currentOrder.vendorLogo'\n              : '/assets/images/no-image.jpg'\n          \"\n        />\n        <p>Vui lòng nhập mật khẩu để thanh toán cho giao dịch</p>\n        <input\n          type=\"password\"\n          [(ngModel)]=\"confirmPassword\"\n          class=\"input-group-text w-100 text-left\"\n        />\n\n        <div class=\"text-right my-2\">\n          <button\n            class=\"btn btn-sm mx-3 btn-outline-secondary\"\n            (click)=\"onGoBack()\"\n          >\n            Quay lại\n          </button>\n          <button class=\"btn btn-sm btn-info\" (click)=\"onConfirm()\">\n            Xác nhận\n          </button>\n        </div>\n      </div>\n\n      <div class=\"card-body align-middle\" *ngIf=\"isSuccess\">\n        <div class=\"text-center\">\n          <i class=\"fas fa-check-circle fa-3x text-success\"></i>\n        </div>\n        <p class=\"text-center mt-2\">Giao dịch thành công</p>\n        <div class=\"table-responsive\">\n          <table class=\"table table-hover table-vq v-middle\">\n            <thead class=\"thead-light\">\n              <tr>\n                <th style=\"width: 64px;\">STT</th>\n                <th>Loại thẻ</th>\n                <th>Mệnh giá thẻ</th>\n                <th>Mã PIN</th>\n                <th>Số serial</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                *ngFor=\"let item of dataTable; let i = index\"\n                class=\"text-center\"\n              >\n                <td style=\"width: 64px;\" class=\"text-center\">{{ i + 1 }}</td>\n\n                <td>\n                  <a href=\"javascript:void(0)\">{{ item }}</a>\n                </td>\n                <td></td>\n                <td></td>\n                <td></td>\n              </tr>\n            </tbody>\n            <tfoot *ngIf=\"dataTable.length === 0\">\n              <tr>\n                <td class=\"text-center\" colspan=\"5\">\n                  Chưa có dữ liệu\n                </td>\n              </tr>\n            </tfoot>\n          </table>\n          <app-pagination\n            [allItems]=\"data\"\n            (changePage)=\"dataTable = $event; cdRef.detectChanges()\"\n            [customPageSize]=\"'5'\"\n          >\n          </app-pagination>\n        </div>\n        <div class=\"text-right mt-3\">\n          <button class=\"btn btn-info btn-sm\">\n            In thường\n          </button>\n          <button class=\"btn btn-info btn-sm mx-3\">\n            Gửi email\n          </button>\n          <button class=\"btn btn-info btn-sm\" (click)=\"onReset()\">\n            Thực hiện giao dịch khác\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-12 col-lg-5\">\n    <div class=\"card\">\n      <div class=\"card-body align-middle\">\n        <h6>Thông tin giao dịch</h6>\n        <div class=\"row\">\n          <div class=\"col-12 col-md-6 my-2\">\n            Loại giao dịch:\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Nạp điện thoại trả trước\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Sản phẩm:\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ currentOrder.vendor }}\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Đối tượng:\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ currentOrder.phone_number }}\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Mệnh giá\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ formatAmount(currentOrder.amount) }} đ\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Chiết khấu\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ formatAmount(0) }} đ ({{ currentOrder.discount }}%)\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Phí thanh toán\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            0 đ\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Tổng thanh toán\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">{{ formatAmount(0) }} đ</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { formatAmount } from \"../../shared/constants/constant\";\n\n@Component({\n  selector: \"app-order\",\n  templateUrl: \"./order.component.html\",\n  styleUrls: [\"./order.component.scss\"],\n})\nexport class OrderComponent implements OnInit {\n  formatAmount = formatAmount;\n\n  amounts = [];\n  vendors = [];\n  nearestOrders = [];\n\n  selectedVendor = null;\n  currentOrder = {};\n\n  total = 0;\n  discountTotal = 0;\n  errorMessage = null;\n  isConfirm = true;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.isConfirm = true;\n  }\n\n  onSelectVendor(item) {}\n\n  onSelectAmount($event) {}\n\n  handleCallBack(event) {\n    // console.log(event);\n    if (event.cmd === \"go-back\") {\n      this.isConfirm = false;\n    }\n  }\n}\n","<div class=\"page_header row\">\n  <div class=\"col-12 col-md-6 col-sm-6 col-xs-6\">\n    <app-page-header-left></app-page-header-left>\n  </div>\n</div>\n<div class=\"pagg-content mt-5\" *ngIf=\"!isConfirm\">\n  <form>\n    <div class=\"row\">\n      <div class=\"col-12 col-lg-7\">\n        <div class=\"card\">\n          <div class=\"card-body align-middle\">\n            <h6>Thông tin nạp tiền điện thoại</h6>\n            <div class=\"col-md-12 ml-auto\" *ngIf=\"errorMessage !== null\">\n              <p class=\"text-danger\">* {{ errorMessage }}</p>\n            </div>\n            <div class=\"row align-items-center\">\n              <div\n                *ngIf=\"vendors.length === 0\"\n                class=\"col-12 col-md-12 col-lg-12 my-2\"\n              >\n                <p>Không có dữ liệu nhà cung cấp</p>\n              </div>\n              <div\n                *ngFor=\"let item of vendors\"\n                class=\"col-6 col-md-4 col-lg-3 my-2\"\n              >\n                <div\n                  (click)=\"onSelectVendor(item)\"\n                  style=\"border-radius: 6px !important;\"\n                  class=\"px-3 border border-logo rounded\"\n                  [ngClass]=\"{\n                    'selected-vendor': selectedVendor === item,\n                    'border-danger': selectedVendor === item\n                  }\"\n                >\n                  <img\n                    class=\"vendor-logo\"\n                    [src]=\"\n                      item.logo ? item.logo : '/assets/images/no-image.jpg'\n                    \"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <!-- <label for=\"phone_number\" class=\"col-sm-12 col-form-label\"\n                  >Số điện thoại được nạp: (<span class=\"text-danger\">*</span>)</label\n                > -->\n            <div class=\"input-group my-3\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n                numbersOnly\n              />\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text text-secondary\" id=\"basic-addon2\"\n                  >Số điện thoại được nạp</span\n                >\n              </div>\n            </div>\n\n            <div class=\"input-group my-3\">\n              <div class=\"input-group-prepend\">\n                <span\n                  class=\"input-group-text prepend-custom text-secondary\"\n                  id=\"basic-addon3\"\n                  >Mệnh giá thẻ</span\n                >\n              </div>\n              <select\n                (change)=\"onSelectAmount($event)\"\n                class=\"custom-select\"\n                style=\"font-size: inherit;\"\n                id=\"inputGroupSelect01\"\n              >\n                <option value=\"\">Chọn mệnh giá thẻ</option>\n                <option *ngFor=\"let item of amounts\" [value]=\"item._id\">{{\n                  formatAmount(item.amount)\n                }}</option>\n              </select>\n            </div>\n            <p>\n              Chiết khấu:\n              <span class=\"text-danger\">{{ formatAmount(discountTotal) }}</span\n              ><sup> đ</sup>\n            </p>\n            <p>\n              Thanh toán:\n              <span class=\"text-danger\">{{ formatAmount(total) }}</span\n              ><sup> đ</sup>\n            </p>\n            <div class=\"text-right\">\n              <button\n                (click)=\"onSubmit()\"\n                class=\"btn btn-primary\"\n                type=\"button\"\n              >\n                Tiếp theo <i class=\"fas fa-long-arrow-alt-right\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12 col-lg-5\">\n        <div class=\"card\">\n          <div class=\"card-body align-middle\">\n            <h6>Số dự hiện tại: {{ formatAmount(\"500000000\") }}đ</h6>\n            <h6>Giao dịch gần đây</h6>\n            <div class=\"table-responsive\">\n              <table class=\"table v-middle table-hover\">\n                <thead class=\"thead-light\">\n                  <tr>\n                    <th>Nhà cung cấp</th>\n                    <th>Thời gian</th>\n                    <th>Số điện thoại</th>\n                    <th>Số tiền (VNĐ)</th>\n                  </tr>\n                </thead>\n                <!-- <tbody>\n                      <tr *ngFor=\"let item of nearestTrading; let i = index\">\n                        <td class=\"text-center\">\n                          <img\n                            style=\"margin: 0 auto;\"\n                            [src]=\"getVendorLogo(item.vendor_logo)\"\n                            width=\"auto\"\n                            height=\"48px\"\n                          />\n                        </td>\n                        <td>{{ momentFormat(item.created_at) }}</td>\n                        <td>{{ item.phone_number }}</td>\n                        <td>{{ formatAmount(item.amount) }}</td>\n                      </tr>\n                    </tbody> -->\n                <tfoot>\n                  <tr *ngIf=\"nearestOrders.length === 0\" class=\"text-center\">\n                    <th colspan=\"5\">Không có dữ liệu</th>\n                  </tr>\n                </tfoot>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class=\"pagg-content mt-5\" *ngIf=\"isConfirm\">\n  <app-order-confirm\n    [currentOrder]=\"currentOrder\"\n    (callBack)=\"handleCallBack($event)\"\n  ></app-order-confirm>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\nimport { TradingTopupComponent } from \"./trading-topup/trading-topup.component\";\nimport { OrderComponent } from \"./order/order.component\";\n\nexport const routes: Routes = [\n  {\n    path: \"service\",\n    children: [\n      {\n        path: \"\",\n        component: DashboardComponent,\n      },\n      {\n        path: \"trading-topup\",\n        component: TradingTopupComponent,\n        data: {\n          title: \"Nạp tiền điện thoại\",\n          urls: [\n            { title: \"Dịch vụ tiện ích\", url: \"/service\" },\n            { title: \"Nạp tiền điện thoại\" },\n          ],\n        },\n      },\n      {\n        path: \"order\",\n        component: OrderComponent,\n        data: {\n          title: \"Mua mã thẻ điện thoại\",\n          urls: [\n            { title: \"Dịch vụ tiện ích\", url: \"/service\" },\n            { title: \"Mua mã thẻ điện thoại\" },\n          ],\n        },\n      },\n\n      {\n        path: \"recharge\",\n        loadChildren: () =>\n          import(\"./recharge/recharge.module\").then((m) => m.RechargeModule),\n      },\n    ],\n\n    // canActivate: [AuthGuard, AuthGuardAgency],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ShopRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ShopRoutingModule, routes } from \"./shop-routing.module\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { PageHeaderLeftModule } from \"../shared/components/page-header-left/page-header-left.module\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { PaginationModule } from \"../shared/components/pagination/pagination.module\";\n\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\n\nimport { TradingTopupComponent } from \"./trading-topup/trading-topup.component\";\nimport { TradingTopupConfirmComponent } from \"./trading-topup/trading-topup-confirm/trading-topup-confirm.component\";\nimport { OrderComponent } from './order/order.component';\nimport { OrderConfirmComponent } from './order/order-confirm/order-confirm.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    TradingTopupComponent,\n    TradingTopupConfirmComponent,\n    OrderComponent,\n    OrderConfirmComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbModule,\n    PageHeaderLeftModule,\n    PaginationModule,\n    FormsModule,\n  ],\n})\nexport class ShopModule {}\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\nimport { formatAmount } from \"../../../shared/constants/constant\";\n\n@Component({\n  selector: \"app-trading-topup-confirm\",\n  templateUrl: \"./trading-topup-confirm.component.html\",\n  styleUrls: [\"./trading-topup-confirm.component.scss\"],\n})\nexport class TradingTopupConfirmComponent implements OnInit {\n  @Input() currentTopup: any;\n  @Output() callBack = new EventEmitter<any>();\n  formatAmount = formatAmount;\n\n  confirmPassword = \"\";\n  isSuccess = true;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onReset() {}\n\n  onConfirm() {\n    this.isSuccess = true;\n  }\n\n  onGoBack() {\n    this.callBack.emit({\n      cmd: \"go-back\",\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12 col-lg-7\">\n    <div class=\"card\">\n      <div class=\"card-body align-middle\" *ngIf=\"!isSuccess\">\n        <h6>Thanh toán</h6>\n        <img\n          class=\"my-3\"\n          width=\"auto\"\n          height=\"64px\"\n          [src]=\"\n            currentTopup.vendorLogo\n              ? 'currentTopup.vendorLogo'\n              : '/assets/images/no-image.jpg'\n          \"\n        />\n        <p>Vui lòng nhập mật khẩu để thanh toán cho giao dịch</p>\n        <input\n          type=\"password\"\n          [(ngModel)]=\"confirmPassword\"\n          class=\"input-group-text w-100 text-left\"\n        />\n\n        <div class=\"text-right my-2\">\n          <button\n            class=\"btn btn-sm mx-3 btn-outline-secondary\"\n            (click)=\"onGoBack()\"\n          >\n            Quay lại\n          </button>\n          <button class=\"btn btn-sm btn-info\" (click)=\"onConfirm()\">\n            Xác nhận\n          </button>\n        </div>\n      </div>\n\n      <div class=\"card-body align-middle\" *ngIf=\"isSuccess\">\n        <div class=\"text-center\">\n          <i class=\"fas fa-check-circle fa-3x text-success\"></i>\n        </div>\n        <p class=\"text-center mt-2\">Giao dịch thành công</p>\n        <div class=\"text-center mt-5\">\n          <button class=\"btn btn-info btn-sm\" (click)=\"onReset()\">\n            Thực hiện giao dịch khác\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"col-12 col-lg-5\">\n    <div class=\"card\">\n      <div class=\"card-body align-middle\">\n        <h6>Thông tin giao dịch</h6>\n        <div class=\"row\">\n          <div class=\"col-12 col-md-6 my-2\">\n            Loại giao dịch:\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Nạp điện thoại trả trước\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Sản phẩm:\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ currentTopup.vendor }}\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Đối tượng:\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ currentTopup.phone_number }}\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Mệnh giá\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ formatAmount(currentTopup.amount) }} đ\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Chiết khấu\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            {{ formatAmount(0) }} đ ({{ currentTopup.discount }}%)\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Phí thanh toán\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            0 đ\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">\n            Tổng thanh toán\n          </div>\n          <div class=\"col-12 col-md-6 my-2\">{{ formatAmount(0) }} đ</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { formatAmount } from \"../../shared/constants/constant\";\n\n@Component({\n  selector: \"app-trading-topup\",\n  templateUrl: \"./trading-topup.component.html\",\n  styleUrls: [\"./trading-topup.component.scss\"],\n})\nexport class TradingTopupComponent implements OnInit {\n  formatAmount = formatAmount;\n\n  amounts = [];\n  vendors = [];\n  nearestTrading = [];\n\n  selectedVendor = null;\n  currentTopup = {};\n\n  total = 0;\n  discountTotal = 0;\n  errorMessage = null;\n  isConfirm = true;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.isConfirm = true;\n  }\n\n  onSelectVendor(item) {}\n\n  onSelectAmount($event) {}\n\n  handleCallBack(event) {\n    // console.log(event);\n    if (event.cmd === \"go-back\") {\n      this.isConfirm = false;\n    }\n  }\n}\n","<div class=\"page_header row\">\n  <div class=\"col-12 col-md-6 col-sm-6 col-xs-6\">\n    <app-page-header-left></app-page-header-left>\n  </div>\n</div>\n<div class=\"pagg-content mt-5\" *ngIf=\"!isConfirm\">\n  <form>\n    <div class=\"row\">\n      <div class=\"col-12 col-lg-7\">\n        <div class=\"card\">\n          <div class=\"card-body align-middle\">\n            <h6>Thông tin nạp tiền điện thoại</h6>\n            <div class=\"col-md-12 ml-auto\" *ngIf=\"errorMessage !== null\">\n              <p class=\"text-danger\">* {{ errorMessage }}</p>\n            </div>\n            <div class=\"row align-items-center\">\n              <div\n                *ngIf=\"vendors.length === 0\"\n                class=\"col-12 col-md-12 col-lg-12 my-2\"\n              >\n                <p>Không có dữ liệu nhà cung cấp</p>\n              </div>\n              <div\n                *ngFor=\"let item of vendors\"\n                class=\"col-6 col-md-4 col-lg-3 my-2\"\n              >\n                <div\n                  (click)=\"onSelectVendor(item)\"\n                  style=\"border-radius: 6px !important;\"\n                  class=\"px-3 border border-logo rounded\"\n                  [ngClass]=\"{\n                    'selected-vendor': selectedVendor === item,\n                    'border-danger': selectedVendor === item\n                  }\"\n                >\n                  <img\n                    class=\"vendor-logo\"\n                    [src]=\"\n                      item.logo ? item.logo : '/assets/images/no-image.jpg'\n                    \"\n                  />\n                </div>\n              </div>\n            </div>\n\n            <!-- <label for=\"phone_number\" class=\"col-sm-12 col-form-label\"\n                >Số điện thoại được nạp: (<span class=\"text-danger\">*</span>)</label\n              > -->\n            <div class=\"input-group my-3\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                aria-label=\"Recipient's username\"\n                aria-describedby=\"basic-addon2\"\n                numbersOnly\n              />\n              <div class=\"input-group-append\">\n                <span class=\"input-group-text text-secondary\" id=\"basic-addon2\"\n                  >Số điện thoại được nạp</span\n                >\n              </div>\n            </div>\n\n            <div class=\"input-group my-3\">\n              <div class=\"input-group-prepend\">\n                <span\n                  class=\"input-group-text prepend-custom text-secondary\"\n                  id=\"basic-addon3\"\n                  >Mệnh giá thẻ</span\n                >\n              </div>\n              <select\n                (change)=\"onSelectAmount($event)\"\n                class=\"custom-select\"\n                style=\"font-size: inherit;\"\n                id=\"inputGroupSelect01\"\n              >\n                <option value=\"\">Chọn mệnh giá thẻ</option>\n                <option *ngFor=\"let item of amounts\" [value]=\"item._id\">{{\n                  formatAmount(item.amount)\n                }}</option>\n              </select>\n            </div>\n            <p>\n              Chiết khấu:\n              <span class=\"text-danger\">{{ formatAmount(discountTotal) }}</span\n              ><sup> đ</sup>\n            </p>\n            <p>\n              Thanh toán:\n              <span class=\"text-danger\">{{ formatAmount(total) }}</span\n              ><sup> đ</sup>\n            </p>\n            <div class=\"text-right\">\n              <button\n                (click)=\"onSubmit()\"\n                class=\"btn btn-primary\"\n                type=\"button\"\n              >\n                Tiếp theo <i class=\"fas fa-long-arrow-alt-right\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-12 col-lg-5\">\n        <div class=\"card\">\n          <div class=\"card-body align-middle\">\n            <h6>Số dự hiện tại: {{ formatAmount(\"500000000\") }}đ</h6>\n            <h6>Giao dịch gần đây</h6>\n            <div class=\"table-responsive\">\n              <table class=\"table v-middle table-hover\">\n                <thead class=\"thead-light\">\n                  <tr>\n                    <th>Nhà cung cấp</th>\n                    <th>Thời gian</th>\n                    <th>Số điện thoại</th>\n                    <th>Số tiền (VNĐ)</th>\n                  </tr>\n                </thead>\n                <!-- <tbody>\n                    <tr *ngFor=\"let item of nearestTrading; let i = index\">\n                      <td class=\"text-center\">\n                        <img\n                          style=\"margin: 0 auto;\"\n                          [src]=\"getVendorLogo(item.vendor_logo)\"\n                          width=\"auto\"\n                          height=\"48px\"\n                        />\n                      </td>\n                      <td>{{ momentFormat(item.created_at) }}</td>\n                      <td>{{ item.phone_number }}</td>\n                      <td>{{ formatAmount(item.amount) }}</td>\n                    </tr>\n                  </tbody> -->\n                <tfoot>\n                  <tr *ngIf=\"nearestTrading.length === 0\" class=\"text-center\">\n                    <th colspan=\"5\">Không có dữ liệu</th>\n                  </tr>\n                </tfoot>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n<div class=\"pagg-content mt-5\" *ngIf=\"isConfirm\">\n  <app-trading-topup-confirm\n    [currentTopup]=\"currentTopup\"\n    (callBack)=\"handleCallBack($event)\"\n  ></app-trading-topup-confirm>\n</div>\n"]}